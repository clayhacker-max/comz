# -*- coding: UTF-8 -*-
import argparse as _PARSE
banners = '\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\n\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80    \xe2\x96\x84\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x84\n\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x97\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x97\xe2\x95\x94\xe2\x95\x97\xe2\x95\x94\xe2\x95\x97\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x97    \xe2\x96\x88   \xe2\x96\x88  V.1.6\n\xe2\x95\x91\xe2\x95\x94\xe2\x95\x90\xe2\x95\x9d\xe2\x95\x91\xe2\x95\x94\xe2\x95\x97\xe2\x95\x91\xe2\x95\x91\xe2\x95\x9a\xe2\x95\x9d\xe2\x95\x91\xe2\x94\x80\xe2\x95\x90\xe2\x95\x90\xe2\x95\x91\xe2\x95\x91   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88         \xe2\x96\x84\xe2\x96\x80\xe2\x96\x80\xe2\x96\x84\n\xe2\x95\x91\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x97\xe2\x95\x91\xe2\x95\x9a\xe2\x95\x9d\xe2\x95\x91\xe2\x95\x91\xe2\x95\x91\xe2\x95\x91\xe2\x95\x91\xe2\x95\x91\xe2\x95\x91\xe2\x95\x90\xe2\x95\x90\xe2\x95\xa3   \xe2\x96\x88\xe2\x96\x88\xe2\x94\x80\xe2\x96\x80\xe2\x94\x80\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x88\xe2\x96\x80\xe2\x96\x88\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x88  \xe2\x96\x88\n\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d\xe2\x95\x9a\xe2\x95\xa9\xe2\x95\xa9\xe2\x95\x9d\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x80 \xe2\x96\x80     \xe2\x96\x80\xe2\x96\x80\n'
class PARZE:
	@staticmethod
	def CLI_PARSE():
		print (banners)
		_sazd = _PARSE.ArgumentParser(usage="comz.py [-m] -i <files> -c <Number> -r <Repeat> -o <Outfile>",description="{Compile Marshal} {c} Sazxt thanks {Mr.Tr3v!0n} | Black Coder Crush",version="\tRelase Version Available 1.6 ~ ")
		_sazd.add_argument("-m","--menu",help="aktifkan Mode Penampilan Menu",action="store_true")
		_sazd.add_argument("-i","--infiles",metavar="",help="tentukan Nama File Untuk Di Proses")
		_sazd.add_argument("-c","--compile",metavar="",help="compile pilihan tersedia dari [ 1 - 27 ]",type=int)
		_sazd.add_argument("-r","--repeat",metavar="",help="Aktifkan Compile Berulang Max={400}",type=int)
		_sazd.add_argument("-e","--encode",metavar="",help="encode Marshal Bytecode")
		_sazd.add_argument("-o","--out",metavar="",help="Simpan File")
		_sazd.add_argument("-t","--tampilkan",help="Tampilkan Hasil compile",action="store_true")
		return _sazd
_VerSion = 1.6
_MESSAGE = "\x1b[37m[\x1b[32m-\x1b[37m] \x1b[0mCompile Marshal\n\x1b[37m[\x1b[31m+\x1b[37m] \x1b[0mAvailable Version Update [ \x1b[32mV.{} \x1b[0m] ".format(_VerSion)
_CHOSE = "\x1b[37m[\x1b[34m+\x1b[37m] \x1b[0mChose : "
class inu:
	def baf(self):
		self._Nlaf = (
		"""
{ Comz < python source code obfuscator. only obfuscator > }
{ Author : Mr.Gaming }
{ Black Coder Crush }
	──────────────────────────────────
	Usage : 
	comz.py -i file -c 27 -o outfile.py
- i [ input File : Masukan nama File untuk Di eksekusi ! ]
- o [ out file : Nama file yang akan di simpan ]
- m [ Menu : Memaparkan Penampilan Menu ] ~ comz.py -m
- e [ encode : { encode bytecode : file ini berjenis .pyc } ]
- r [ repeat : { Tentukan brapa kali file di compile max : 400 } ]
> Bantuan Lanjut : comz --help or comz.py -m
help : comz.py --help or comz.py -h
	---
		"""
		)
		print self._Nlaf